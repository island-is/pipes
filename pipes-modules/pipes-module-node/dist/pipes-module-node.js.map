{"version":3,"file":"pipes-module-node.js","sources":["../src/config.ts","../src/context/add-env.ts","../src/context/compile-and-run.ts","../src/context/get-version.ts","../src/context/prepare-container.ts","../src/context/get-container.ts","../src/context/is-version.ts","../src/context/modify-package-json.tsx","../src/context/run.tsx","../src/context.ts","../src/pipes-module-node.ts"],"sourcesContent":["import { createConfig } from \"@island-is/pipes-core\";\n\nimport type { PipesNodeModule } from \"./interface.js\";\n\nexport const PipesNodeConfig = createConfig<PipesNodeModule>(({ z }) => ({\n  nodeDebug: z.boolean().default(false, {\n    env: \"NODE_DEBUG\",\n    arg: {\n      long: \"nodeDebug\",\n    },\n  }),\n  nodePackageManager: z.union([z.literal(\"yarn\"), z.literal(\"npm\")]).default(\"yarn\"),\n  nodeImageKey: z.string().default(\"node-dev\"),\n  nodeWorkDir: z.string().default(\"/apps\"),\n  nodeSourceDir: z.string().default(process.cwd()),\n  nodeSourceIncludeOrExclude: z\n    .union([z.literal(\"include\"), z.literal(\"exclude\"), z.literal(\"include-and-exclude\")])\n    .default(\"exclude\"),\n  nodeSourceInclude: z.array(z.string()).default([]),\n  nodeSourceExclude: z\n    .array(z.string())\n    .default([\".env*\", \"**/node_modules\", \"node_modules\", \".yarn/cache\", \".yarn/install-state.gz\", \".yarn/unplugged\"]),\n  nodeVersion: z.string().default(\"AUTO\"),\n}));\n","import type { PipesNodeModule } from \"../interface.js\";\nimport type { removeContextCommand } from \"@island-is/pipes-core\";\n\nexport const addEnv: removeContextCommand<PipesNodeModule[\"Context\"][\"Implement\"][\"nodeAddEnv\"]> =\n  async function addEnv(context, config, { container, env }) {\n    const imageStore = await context.imageStore;\n    const usedContainer = container || (await imageStore.awaitForAvailability(`node-${config.nodeImageKey}`));\n    const newContainer = context.addEnv({ container: usedContainer, env });\n    return newContainer;\n  };\n","import { builtinModules } from \"node:module\";\nimport { basename, join } from \"path\";\n\nimport { rollup } from \"rollup\";\nimport { swc } from \"rollup-plugin-swc3\";\nimport { file as tmpFile } from \"tmp-promise\";\n\nimport type { PipesNodeModule } from \"../interface.js\";\nimport type { Container } from \"@dagger.io/dagger\";\nimport type { removeContextCommand } from \"@island-is/pipes-core\";\n\nexport const compileAndRun: removeContextCommand<PipesNodeModule[\"Context\"][\"Implement\"][\"nodeCompileAndRun\"]> =\n  async function compileAndRun(context, config, { container, name, file, external, output = { output: \"stdout\" } }) {\n    let value: Container;\n    const getMessage = async (messageContainer: Container) => {\n      if (!messageContainer) {\n        throw new Error(\"Container unassigned\");\n      }\n      if (\"output\" in output) {\n        if (output.output === \"stdout\") {\n          return messageContainer.stdout();\n        }\n        if (output.output === \"stderr\") {\n          return messageContainer.stderr();\n        }\n      }\n      if (\"file\" in output) {\n        const outputFile = (await messageContainer.file(output.file).sync()).contents();\n        return outputFile;\n      }\n      if (\"fileFromEnv\" in output) {\n        const fileName = await messageContainer.envVariable(output.fileFromEnv);\n        const outputFile = await (await messageContainer.file(fileName).sync()).contents();\n        return outputFile;\n      }\n      // Default behaviour\n      return messageContainer.stdout();\n    };\n    try {\n      const tmpFile = await compileFile(file, external, name);\n      const imageStore = await context.imageStore;\n      value = await (container ?? imageStore.awaitForAvailability(`node-${config.nodeImageKey}`));\n      const tmpFileRef = context.client.host().file(tmpFile);\n      value = await (\n        await value\n          .withWorkdir(config.nodeWorkDir)\n          .withFile(join(config.nodeWorkDir, basename(tmpFile)), tmpFileRef)\n          .withExec([\"yarn\", \"node\", basename(tmpFile)])\n          .sync()\n      )\n        .withExec([\"rm\", basename(tmpFile)])\n        .sync();\n      return {\n        message: await getMessage(value),\n        container: value,\n      };\n    } catch (e) {\n      const message = await (() => {\n        try {\n          /* @ts-expect-error - this could been unassigned */\n          return getMessage(value);\n        } catch {\n          return `Error occured with ${file} using prefix: ${name}`;\n        }\n      })();\n      return {\n        error: e,\n        message,\n        container: null,\n      };\n    }\n  };\n\nconst nodeResolve = (await import(\"rollup-plugin-node-resolve\")).default;\n\nasync function compileFile(inputFile: string, additionalExternals: string[] = [], name: string): Promise<string> {\n  const { path: tmpFilePath } = await tmpFile({ prefix: name, postfix: \".mjs\" });\n\n  const config = {\n    input: inputFile,\n    output: {\n      file: tmpFilePath,\n      format: \"esm\" as const,\n    },\n    // @ts-expect-error - wrong typing\n    plugins: [nodeResolve({ only: [] }), swc({ minify: false })],\n    external: [...builtinModules, ...builtinModules.map((e) => `node:${e}`), ...additionalExternals],\n  };\n\n  const bundle = await rollup(config);\n\n  await bundle.write(config.output);\n  await bundle.close();\n\n  return tmpFilePath;\n}\n","import { getNvmVersion } from \"@island-is/pipes-core\";\n\nimport type { PipesNodeModule } from \"../interface.js\";\nimport type { removeContextCommand } from \"@island-is/pipes-core\";\n\nexport const getVersion: removeContextCommand<PipesNodeModule[\"Context\"][\"Implement\"][\"nodeGetVersion\"]> =\n  async function getVersion(_context, config) {\n    if (config.nodeVersion === \"AUTO\") {\n      // TODO move to async:\n      const nodeVersion = await getNvmVersion(config.nodeSourceDir);\n      config.nodeVersion = nodeVersion;\n    }\n    return config.nodeVersion;\n  };\n","import type { PipesNodeModule } from \"../interface.js\";\nimport type { Container, removeContextCommand } from \"@island-is/pipes-core\";\n\nexport const prepareContainer: removeContextCommand<PipesNodeModule[\"Context\"][\"Implement\"][\"nodePrepareContainer\"]> =\n  async function prepareContainer(context, config) {\n    return (await context.imageStore).getOrSet(`node-${config.nodeImageKey}`, async () => {\n      const container = (await context.nodeGetContainer()).withWorkdir(config.nodeWorkDir);\n      const sourceOptions = {\n        ...(config.nodeSourceIncludeOrExclude === \"include\" ||\n        config.nodeSourceIncludeOrExclude === \"include-and-exclude\"\n          ? {\n              include: config.nodeSourceInclude,\n            }\n          : {}),\n        ...(config.nodeSourceIncludeOrExclude === \"exclude\" ||\n        config.nodeSourceIncludeOrExclude === \"include-and-exclude\"\n          ? {\n              exclude: config.nodeSourceExclude,\n            }\n          : {}),\n      };\n      // Currently we are just using yarn\n      const source = context.client.host().directory(config.nodeSourceDir, sourceOptions);\n      if (config.nodePackageManager === \"yarn\") {\n        const isNode20 = await context.nodeIsVersionGreaterOrEqual({ version: 20 });\n        let yarnContainer: Container;\n        if (isNode20) {\n          yarnContainer = await container\n            .withDirectory(config.nodeWorkDir, source)\n            .withWorkdir(config.nodeWorkDir)\n            .withExec([\"corepack\", \"enable\"])\n            .sync();\n        } else {\n          yarnContainer = await container\n            .withDirectory(config.nodeWorkDir, source)\n            .withWorkdir(config.nodeWorkDir)\n            .withExec([\"npm\", \"install\", \"-g\", \"yarn\"])\n            .sync();\n        }\n        const install = await yarnContainer.withWorkdir(config.nodeWorkDir).withExec([\"yarn\", \"install\"]).sync();\n        return install.withWorkdir(config.nodeWorkDir);\n      }\n      throw new Error(`Package manager ${config.nodePackageManager} not implemented`);\n    });\n  };\n","import type { PipesNodeModule } from \"../interface.js\";\nimport type { removeContextCommand } from \"@island-is/pipes-core\";\n\nexport const getContainer: removeContextCommand<PipesNodeModule[\"Context\"][\"Implement\"][\"nodeGetContainer\"]> =\n  async function getContainer(context, _config) {\n    const version = await context.nodeGetVersion();\n    return (await context.imageStore).getOrSet(`base-node-${version}`, () => {\n      const container = context.client.container().from(`node:${version}`);\n      return container;\n    });\n  };\n","import type { PipesNodeModule } from \"../interface.js\";\nimport type { removeContextCommand } from \"@island-is/pipes-core\";\n\nexport const isVersionGreaterOrEqual: removeContextCommand<\n  PipesNodeModule[\"Context\"][\"Implement\"][\"nodeIsVersionGreaterOrEqual\"]\n> = async function isVersionGreaterOrEqual(context, _config, { version }) {\n  const nodeVersion = parseInt((await context.nodeGetVersion()).split(\".\").find((e) => e) ?? \"0\", 10);\n\n  return nodeVersion >= version;\n};\n","import { writeFile } from \"fs/promises\";\nimport { join } from \"path/posix\";\n\nimport { file as tmpFile } from \"tmp-promise\";\n\nimport type { PipesNodeModule } from \"../interface.js\";\nimport type { removeContextCommand } from \"@island-is/pipes-core\";\n\nexport const modifyPackageJSON: removeContextCommand<PipesNodeModule[\"Context\"][\"Implement\"][\"nodeModifyPackageJSON\"]> =\n  async function modifyPackageJSON(context, config, props) {\n    const container = await context.nodePrepareContainer();\n    const packageJSONPath = join(config.nodeWorkDir, props.relativeCwd, \"package.json\");\n    const packageJSON = JSON.parse(await container.file(packageJSONPath).contents());\n    const _value = await props.fn(packageJSON);\n    const value = JSON.stringify(_value, null, 2);\n    const { path: tmpFilePath } = await tmpFile({ prefix: \"package\", postfix: \".json\" });\n    await writeFile(tmpFilePath, value, \"utf-8\");\n    const packageJSONNewFile = context.client.host().file(tmpFilePath);\n    const newContainer = container.withFile(packageJSONPath, packageJSONNewFile);\n    await (await context.imageStore).setKey(`node-${config.nodeImageKey}`, newContainer);\n  };\n","import { join } from \"path/posix\";\n\nimport { Container, PipesDOM, type removeContextCommand, z } from \"@island-is/pipes-core\";\nimport React from \"react\";\n\nimport type { PipesNodeModule } from \"../interface.js\";\n\nexport interface RunStateMessage {\n  state: \"Success\";\n  container: Container;\n}\nexport interface RunStateError {\n  state: \"Error\";\n  error: any;\n}\n\nexport const RunStateSchema = z.promise(\n  z.custom<RunState>((value) => {\n    if (typeof value !== \"object\" || value === null) {\n      throw new Error(`Invalid format`);\n    }\n    if (\n      \"state\" in value &&\n      value.state === \"Success\" &&\n      \"container\" in value &&\n      value.container &&\n      value.container instanceof Container\n    ) {\n      return {\n        state: value.state,\n        container: value.container,\n      };\n    }\n    if (\"state\" in value && value.state === \"Error\" && \"error\" in value) {\n      return {\n        state: value.state,\n        error: value.error,\n      };\n    }\n    throw new Error(\"Invalid format\");\n  }),\n);\n\nexport type RunState = RunStateError | RunStateMessage;\n\nexport const run: removeContextCommand<PipesNodeModule[\"Context\"][\"Implement\"][\"nodeRun\"]> = async function run(\n  context,\n  config,\n  { args, relativeCwd = \".\", packageManager },\n) {\n  const container = await context.nodePrepareContainer();\n  const path = join(config.nodeWorkDir, relativeCwd);\n  if (config.nodeDebug) {\n    void PipesDOM.render(\n      <PipesDOM.Info>\n        Running {config.nodePackageManager} with args: {args.join(\" \")} in path: {path}\n      </PipesDOM.Info>,\n      {\n        forceRenderNow: true,\n      },\n    );\n  }\n  try {\n    const newContainer = await container\n      .withWorkdir(path)\n      .withExec([packageManager ?? config.nodePackageManager, ...args])\n      .sync();\n    return {\n      state: \"Success\",\n      container: newContainer,\n    };\n  } catch (error) {\n    return {\n      state: \"Error\",\n      error,\n    };\n  }\n};\n","import { Container } from \"@dagger.io/dagger\";\nimport { createContext } from \"@island-is/pipes-core\";\n\nimport {\n  RunStateSchema,\n  addEnv,\n  compileAndRun,\n  getContainer,\n  getVersion,\n  isVersionGreaterOrEqual,\n  modifyPackageJSON,\n  prepareContainer,\n  run,\n} from \"./context/context.js\";\n\nimport type { RunState } from \"./context/context.js\";\nimport type { PipesNodeModule } from \"./interface.js\";\n\nexport const PipesNodeContext: (prop: any) => PipesNodeModule[\"Context\"][\"Implement\"] = createContext<PipesNodeModule>(\n  ({ z, fn }): PipesNodeModule[\"Context\"][\"Implement\"] => ({\n    nodeModifyPackageJSON: fn<{ relativeCwd: string; fn: (value: any) => any | Promise<any> }, Promise<void>>({\n      value: z.object({ relativeCwd: z.string(), fn: z.function(z.tuple([z.any()]), z.any()) }),\n      output: z.promise(z.void()),\n      implement: modifyPackageJSON,\n    }),\n    nodeIsVersionGreaterOrEqual: fn<{ version: number }, Promise<boolean>>({\n      value: z.object({ version: z.number() }),\n      output: z.promise(z.boolean()),\n      implement: isVersionGreaterOrEqual,\n    }),\n    nodeRun: fn<{ args: string[]; relativeCwd?: string }, Promise<RunState>>({\n      value: z.object({\n        args: z.array(z.string().default(\".\")),\n        relativeCwd: z.string().optional(),\n        packageManager: z.union([z.literal(\"yarn\"), z.literal(\"npm\")]).optional(),\n      }),\n      output: RunStateSchema,\n      implement: run,\n    }),\n    nodeAddEnv: fn<{ container?: Container; env: [string, string][] }, Promise<Container>>({\n      value: z.object({ container: z.custom<Container>().optional(), env: z.array(z.tuple([z.string(), z.string()])) }),\n      output: z.custom<Promise<Container>>((val) => val),\n      implement: addEnv,\n    }),\n    nodeCompileAndRun: fn<\n      {\n        file: string;\n        external: string[];\n        name: string;\n        container?: Container;\n        output?: { output: \"stdout\" } | { output: \"stderr\" } | { file: string } | { fileFromEnv: string };\n      },\n      Promise<{ error?: true | unknown; message: string; container: Container | null }>\n    >({\n      value: z.object({\n        container: z.custom<Container>().optional(),\n        file: z.string(),\n        name: z.string(),\n        output: z\n          .union([\n            z.object({ output: z.literal(\"stdout\") }),\n            z.object({ output: z.literal(\"stderr\") }),\n            z.object({ file: z.string() }),\n            z.object({ fileFromEnv: z.string() }),\n          ])\n          .default({ output: \"stdout\" })\n          .optional(),\n        external: z.array(z.string()).default([]),\n        env: z.record(z.string(), z.string()).default({}),\n      }),\n      output: z.custom<Promise<{ error?: true | unknown; message: string; container: Container | null }>>((val) => {\n        return val;\n      }),\n      implement: compileAndRun,\n    }),\n    nodeGetVersion: fn<undefined, Promise<string>>({\n      value: undefined,\n      output: z.promise(z.string()),\n      implement: getVersion,\n    }),\n    nodePrepareContainer: fn<undefined, Promise<Container>>({\n      output: z.promise(\n        z.custom<Container>((val) => {\n          if (val instanceof Container) {\n            return val;\n          }\n          throw new Error(`Invalid value`);\n        }),\n      ),\n      implement: prepareContainer,\n    }),\n    nodeGetContainer: fn<undefined, Promise<Container>>({\n      output: z.promise(\n        z.custom<Container>((val) => {\n          if (val instanceof Container) {\n            return val;\n          }\n          throw new Error(`Invalid value`);\n        }),\n      ),\n      implement: getContainer,\n    }),\n  }),\n);\n","/**\n * @file Core module for pipes\n */\n\nimport { createModule } from \"@island-is/pipes-core\";\n\nimport { PipesNodeConfig } from \"./config.js\";\nimport { PipesNodeContext } from \"./context.js\";\n\nimport type { PipesNodeModule } from \"./interface.js\";\nimport type { ModuleReturnType } from \"@island-is/pipes-core\";\n\nexport const PipesNode: ModuleReturnType<PipesNodeModule> = createModule<PipesNodeModule>({\n  name: \"PipesNode\",\n  config: PipesNodeConfig,\n  context: PipesNodeContext,\n  required: [\"PipesCore\"],\n});\nexport * from \"./interface.js\";\nexport * from \"./context/run.js\";\nexport * from \"./context.js\";\nexport * from \"./config.js\";\nexport type { PipesNodeModule, IPipesNodeContext, IPipesNodeConfig } from \"./interface.js\";\n"],"names":["PipesNodeConfig","createConfig","z","nodeDebug","boolean","default","env","arg","long","nodePackageManager","union","literal","nodeImageKey","string","nodeWorkDir","nodeSourceDir","process","cwd","nodeSourceIncludeOrExclude","nodeSourceInclude","array","nodeSourceExclude","nodeVersion","addEnv","context","config","container","imageStore","usedContainer","awaitForAvailability","newContainer","compileAndRun","name","file","external","output","value","getMessage","messageContainer","Error","stdout","stderr","outputFile","sync","contents","fileName","envVariable","fileFromEnv","tmpFile","compileFile","tmpFileRef","client","host","withWorkdir","withFile","join","basename","withExec","message","e","error","nodeResolve","inputFile","additionalExternals","path","tmpFilePath","prefix","postfix","input","format","plugins","only","swc","minify","builtinModules","map","bundle","rollup","write","close","getVersion","_context","getNvmVersion","prepareContainer","getOrSet","nodeGetContainer","sourceOptions","include","exclude","source","directory","isNode20","nodeIsVersionGreaterOrEqual","version","yarnContainer","withDirectory","install","getContainer","_config","nodeGetVersion","from","isVersionGreaterOrEqual","parseInt","split","find","modifyPackageJSON","props","nodePrepareContainer","packageJSONPath","relativeCwd","packageJSON","JSON","parse","_value","fn","stringify","writeFile","packageJSONNewFile","setKey","RunStateSchema","promise","custom","state","Container","run","args","packageManager","PipesDOM","render","Info","forceRenderNow","PipesNodeContext","createContext","nodeModifyPackageJSON","object","function","tuple","any","void","implement","number","nodeRun","optional","nodeAddEnv","val","nodeCompileAndRun","record","undefined","PipesNode","createModule","required"],"mappings":"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"}